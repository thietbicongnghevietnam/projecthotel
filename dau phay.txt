using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace BackupDatabase
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            //hide from when running
            this.WindowState = System.Windows.Forms.FormWindowState.Minimized;
            this.ShowInTaskbar = false;


            //run with window
            using (RegistryKey key = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true))
            {
                key.SetValue("Backup_Daily", "\"" + Application.ExecutablePath + "\"");
            }

            // Xác định thời gian cụ thể bạn muốn chạy chương trình
            //DateTime gioChay = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 13, 0, 0); // 1:00 PM
            DateTime gioChay = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 16, 56, 0);

            // Tạo một Timer để kiểm tra xem đã đến giờ chưa
            Timer timer = new Timer();
            timer.Interval = 1000; // kiểm tra mỗi giây
            timer.Tick += (s, evt) =>
            {
                if (DateTime.Now.Hour == gioChay.Hour && DateTime.Now.Minute == gioChay.Minute)
                {
                    // Nếu đã đến giờ, thực thi chương trình bạn muốn chạy
                    //RunYourProgram();
                    button1_Click(sender, e);

                    // Dừng timer sau khi chương trình đã chạy
                    timer.Stop();
                }
            };
            timer.Start();

        }

        private void button1_Click(object sender, EventArgs e)
        {
            string path = "";
            string namedatabase = "";
            string[] read_path = File.ReadAllLines("pathbackup.txt");
            path = read_path[0].ToString();    //"DP";

            string[] read_name = File.ReadAllLines("DatabaseName.txt");
            namedatabase = read_name[0].ToString();    //"DP";

            // Đường dẫn lưu trữ file sao lưu
            //string backupFilePath = @"D:\Database\backup\DataNhaHang.bak";
            //string backupFilePath = path;//@"H:\TBCNVN\backup\DataNhaHang.bak";
            //H:\TBCNVN\backup
            // Tên cơ sở dữ liệu cần sao lưu
            //string databaseName = namedatabase;// "DataNhaHang";

            // Thực hiện sao lưu cơ sở dữ liệu
            //BackupDatabase(databaseName, backupFilePath);
            BackupDatabase(namedatabase, path);
        }

        private static void BackupDatabase(string databaseName, string backupFilePath)
        {
            try
            {
                string pathconnect = "";
                string[] read_connect = File.ReadAllLines("connectDB.txt");
                pathconnect = read_connect[0].ToString();    //"DP";

                // Tạo chuỗi kết nối đến cơ sở dữ liệu
                //string connectionString = "Data Source=./;Initial Catalog=DataNhaHang;User ID='sa';Password=''"; // Thay thế bằng chuỗi kết nối của bạn
                string connectionString = pathconnect;// "Data Source=DT-DE2302033;Initial Catalog=DataNhaHang;Integrated Security=True";
                //Data Source=DT-DE2302033;Initial Catalog=DataNhaHang;Integrated Security=True
                // Tạo kết nối đến cơ sở dữ liệu
                using (var connection = new SqlConnection(connectionString))
                {
                    // Mở kết nối
                    connection.Open();

                    // Tạo câu lệnh sao lưu cơ sở dữ liệu
                    string backupCommand = $"BACKUP DATABASE [{databaseName}] TO DISK = '{backupFilePath}' WITH INIT";

                    // Thực thi câu lệnh
                    using (var command = new SqlCommand(backupCommand, connection))
                    {
                        command.ExecuteNonQuery();
                    }

                    // Đóng kết nối
                    connection.Close();
                }

                // Hiển thị thông báo sau khi sao lưu thành công
                Console.WriteLine("Backup successful!!");
            }
            catch (Exception ex)
            {
                // Xử lý các trường hợp lỗi
                Console.WriteLine($"ERROR: {ex.Message}");
            }
        }

       

    }
}
